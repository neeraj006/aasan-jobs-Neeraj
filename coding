Section C

Technical Test (Subjective) 		    45 Marks


1) Help Sheeba out 									    10 marks

Sheeba was asked by a Recruiter to write down 100 numbers (1-100) randomly 
but making sure that no number is repeated twice. At the end, the Recruiter found 
out that Sheeba had done her work perfectly, but committed just one mistake of 
repeating a number twice. Recruiter asked Sheeba that she recruiter her only 
under one condition! If Sheeba is able to find out the only number which she is 
repeated in an optimised manner.

Can you write a pseudocode, which can help Sheeba to find out the number which 
got repeated twice?
solution-
int arr[];\\all random numbers are inside this array.
int len=sizeof(arr)/sizeof(int);
int sum=0;
for(int i=0;i<len;i++)
{
sum =sum+arr[i];
}
int sum2=0;
for(int i=0;i<len;i++)
{
sum =sum^arr[i]; \\using xor operation to elemenate the dublicates 
}
int dub=sum-sum2;//dub number



2) Design a website for a travel company						     15 marks

(Having the following requirements)
a. User will have to select an origin and destination location.
b. User will have to select from and to date.
c. Display some high resolution images as preview of the location when user 
d. Show list of all travel destinations available for the selected time frame as hits submit.
    -> Recommendation (List size 1<=N<=50).
e. Show fares and other expenses.

You are supposed to write code in HTML and JavaScript. Syntax is not a problem, 
your understanding of the problem statement and approach to the same is of primary concern.
<html>
<head>
</head>
<title> travel</title>
<body>
<select>
  <option value="origin">origin</option>
  <option value="1">1</option>
  <option value="2">2</option>
  <option value="2">2</option>
</select>
<select>
  <option value="des">des</option>
  <option value="1">1</option>
  <option value="2">2</option>
  <option value="3">3</option>
</select>
</body>
</html>


3) Closest to zero 									    20 Marks

This problem is also called minimum absolute sum pair. You are given an array of integers, containing both +ve and -ve numbers. You need to find the two elements such that their sum is closest to zero. eg. Array [15, 5, -20, 30, -45] Output should be 15, -20.

Note: We want the sum to be closest to zero not minimum. The minimum in the above example would be (-20, -45), but that is incorrect.
solution-
int arr[];//array containing all elements
int len;  //array len
 int i=0,j=len-1; //indexes to start and end of array
 sort(arr) // sorting
  cursum=arr[i]+arr[j];
  if(cursum>0)
  { prevsum=cursum; 
  j--;
 while(i<j)
 {
   cursum=arr[i]+arr[j];
   
   if(currsum>0)
   {
     j--;
   }
   else   \\if cur become -ve from +ve,comparing the currsum,prevsum
   {
       return min(0-currsum,prevsum-0);  
   }
 }
 }
 else 
 { prevsum=cursum
  i++;
  while(i<j)
  {
  if(cursum<0)
  {
  i++;
  }
  else  //if cursum becomes +ve frpm -ve comparing cursum and prev sum
  {
  return min(cursum-0,0-prevsum);
  }
  }
 }

**** End of paper, Thank You! ****
